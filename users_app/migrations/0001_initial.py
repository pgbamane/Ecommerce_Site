# Generated by Django 2.2.8 on 2020-04-12 10:08

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(db_column='First Name', max_length=15)),
                ('last_name', models.CharField(db_column='Last Name', max_length=30)),
                ('gender', models.CharField(choices=[('female', 'Female'), ('male', 'Male')], db_column='Gender', default='female', max_length=10)),
                ('address', models.CharField(db_column='Address', help_text='Flat No, Building, Street, Area', max_length=255)),
                ('locality', models.CharField(db_column='Locality', help_text='Locality/Town', max_length=20)),
                ('state', models.CharField(db_column='State', max_length=30)),
                ('district', models.CharField(db_column='District', max_length=30)),
                ('city', models.CharField(db_column='City', help_text='City or Taluka', max_length=30)),
                ('pincode', models.CharField(db_column='Pincode', help_text='Pincode stored as Chars', max_length=10)),
                ('phone_number', models.CharField(db_column='Phone Number', max_length=13, unique=True)),
                ('email_id', models.EmailField(db_column='Email ID', max_length=40, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(db_column='Password', max_length=200)),
                ('date_joined', models.DateTimeField(auto_now_add=True, db_column='Date Joined')),
                ('is_active', models.BooleanField(db_column='Is Active', default=False, help_text='Designates whether this user should be considered active or not.', verbose_name='is_active')),
                ('is_staff', models.BooleanField(db_column='Is Staff', default=False, help_text='Designates whether this user is a member of staff to access the admin page or not', verbose_name='is_staff')),
                ('is_superuser', models.BooleanField(db_column='Is Superuser', default=False, help_text='Designates whether this user has all permissions in the admin page or not', verbose_name='is_superuser')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
                'swappable': 'AUTH_USER_MODEL',
            },
        ),
    ]
